apply plugin: 'eclipse'
apply plugin: "com.github.hauner.jarTest"

dependencies {
	compile project(':kieker-common')
	
	compile 'com.rabbitmq:amqp-client:4.2.1'
	compile resolveLibrary('javax.jms-*.jar')
	compile 'org.jctools:jctools-core:2.1.0'
	compile resolveLibrary('aspectjweaver-*.jar')
	compile resolveLibrary('disl-2.0/disl-server.jar')
	compile resolveLibrary('sigar/sigar-*.jar')

	compile 'org.apache.kafka:kafka-clients:0.11.0.1'

	compile 'org.apache.cxf:cxf-bundle-minimal:2.6.15'
	compile resolveLibrary('framework-libs/jsr311-api-1.1.1.jar')
	compile resolveLibrary('framework-libs/javax.ws.rs-api-2.0.1.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-server-1.19.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-client-1.19.jar')
	compile resolveLibrary('framework-libs/jersey/jersey-apache-client4-1.19.jar')
	compile resolveLibrary('framework-libs/javax.servlet-*.jar')
	compile resolveLibrary('framework-libs/spring/aopalliance-*.jar')
        compile resolveLibrary('framework-libs/spring/spring-beans-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-context-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-core-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-web-*.jar')
	compile resolveLibrary('framework-libs/spring/spring-webmvc-*.jar')

	// this project depends on the tests of kieker-common, e.g., it requires the class AbstractKiekerTest
	testCompile project (path: ':kieker-common', configuration: 'testArchives')
	testCompile resolveLibrary('framework-libs/spring/spring-beans-*.jar')

	testRuntime resolveLibrary('framework-libs/spring/spring-expression-*.jar')

	testRuntime fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')
}

eclipse {
	classpath {
		defaultOutputDir = file('build-eclipse')
	}
}

task iajc(dependsOn: classes) {
    doLast {
        ant.taskdef(resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties') {
            classpath {
                fileset(dir: '../lib', includes: "aspectjtools-*.jar")
            }
        }
        ant.iajc(XlintFile: 'aspectjXlint.properties', X: 'joinpoints:synchronization', source: sourceCompatibility, target: targetCompatibility, debug: 'true', destdir: sourceSets.main.output.classesDir) {
            sourceroots {
                pathElement(location: 'src/kieker/monitoring/probe/aspectj')
            }
           
            classpath {
                fileset(dir: '../lib', includes: "aspectjweaver-*.jar")
                fileset(dir: '../lib', includes: "aspectjrt-*.jar")
				fileset(dir: '../lib/framework-libs', includes: "javax.servlet-*.jar")
                fileset(dir: '../lib/framework-libs', includes: "jsr311-api-1.1.1.jar")
                fileset(dir: '../lib/framework-libs', includes: "javax.ws.rs-api-2.0.1.jar")
                fileset(dir: '../lib/framework-libs/jersey', includes: "jersey-server-1.19.jar")
                fileset(dir: '../lib/framework-libs/jersey', includes: "jersey-client-1.19.jar")
                fileset(dir: '../lib/framework-libs/jersey', includes: "jersey-apache-client4-1.19.jar")
				
				pathElement(location: project(':kieker-common').sourceSets.main.output.classesDir)
                pathElement(location: sourceSets.main.output.classesDir)
            }
        }
    }   
}

compileJava.doLast {
    tasks.iajc.execute()
}
